name: 'Create release'
run-name: 'Create release ${{  github.ref_name }}'
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

# Comment2
jobs:
  Build:
    name: Build
    uses: ./.github/workflows/build.yaml
    with:
      tag: ${{  github.ref_name }}
  Release:
    name: Release
    runs-on: ubuntu-latest
    needs: Build
    environment: Deployment
    env:
      tag: ${{ github.ref_name }}
      windows_stem: Sandbox-${{ github.ref_name }}-windows-x86_64
      linux_stem: Sandbox-${{ github.ref_name }}-linux-x86_64
      macos_stem: Sandbox-${{ github.ref_name }}-macos-x86_64
      hashes_file: Sandbox-${{ github.ref_name }}-SHA-256.txt
    steps:
      - uses: actions/download-artifact@v4
      - name: Create assets
        run: |
          mv Artifacts-Windows ${windows_stem}
          7z a ${windows_stem}.7z ${windows_stem}
          mv Artifacts-Linux ${linux_stem}
          tar zcvf ${linux_stem}.tgz ${linux_stem}
          mv Artifacts-MacOS ${macos_stem}
          tar zcvf ${macos_stem}.tgz ${macos_stem}
      - name: Create summary files
        run: |
          sha256sum --binary \
              ${windows_stem}.7z \
              ${linux_stem}.tgz \
              ${macos_stem}.tgz \
              > ${hashes_file}
      - name: Configure signing key
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          mkdir -p ~/.gnupg/
          chmod 700 ~/.gnupg
          printf '%s' "$SIGNING_KEY" > ~/.gnupg/private.key
          chmod 400 ~/.gnupg/private.key
          gpg --import ~/.gnupg/private.key
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag}" \
              --prerelease \
              --verify-tag \
              --generate-notes \
              ${windows_stem}.7z \
              ${linux_stem}.tgz \
              ${macos_stem}.tgz \
              ${hashes_file}