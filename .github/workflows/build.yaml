name: 'Build artifacts'

on:
  push:
    branches: main
  workflow_call:
    inputs:
      tag:
        required: false
        type: string

env:
  INSTALL_DIR: Install/Sandbox

jobs:
  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Build all
        shell: bash
        run: |
          ./build_all
      - name: Create release version file
        if: ${{ inputs.tag != '' }}
        run: |
          python Buildsystem/CreateReleaseVersionFile.py ${{  inputs.tag }} ${{ env.INSTALL_DIR }}
      - uses: actions/upload-artifact@v4
        with:
          name: Artifacts-Windows
          path: ${{ env.INSTALL_DIR }}
          if-no-files-found: error

  build-linux:
    name: Linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Build all
        run: |
          ./build_all
      - name: Create release version file
        if: ${{ inputs.tag != '' }}
        run: |
          python3 Buildsystem/CreateReleaseVersionFile.py ${{  inputs.tag }} "$INSTALL_DIR"
      - uses: actions/upload-artifact@v4
        with:
          name: Artifacts-Linux
          path: ${{ env.INSTALL_DIR }}
          if-no-files-found: error

  build-macos:
    name: MacOS
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Build all
        run: |
          ./build_all
      - name: Create release version file
        if: ${{ inputs.tag != '' }}
        run: |
          python3 Buildsystem/CreateReleaseVersionFile.py ${{  inputs.tag }} ${{ env.INSTALL_DIR }}
      - uses: actions/upload-artifact@v4
        with:
          name: Artifacts-MacOS
          path: ${{ env.INSTALL_DIR }}
          if-no-files-found: error